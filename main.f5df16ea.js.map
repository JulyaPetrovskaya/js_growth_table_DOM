{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","appendRowButton","removeRowButton","appendColumnButton","removeColumnButton","maxRows","minRows","maxCols","minCols","updateButtonsState","rowsCount","rows","length","colsCount","cells","disabled","addEventListener","newRow","insertRow","i","insertCell","deleteRow","deleteCell"],"mappings":";AAAA,aAEA,IAAMA,EAAQC,SAASC,cAAc,UAC/BC,EAAkBF,SAASC,cAAc,eACzCE,EAAkBH,SAASC,cAAc,eACzCG,EAAqBJ,SAASC,cAAc,kBAC5CI,EAAqBL,SAASC,cAAc,kBAE5CK,EAAU,GACVC,EAAU,EACVC,EAAU,GACVC,EAAU,EAEhB,SAASC,IACDC,IAAAA,EAAYZ,EAAMa,KAAKC,OACvBC,EAAYf,EAAMa,KAAK,GAAGG,MAAMF,OAGpCX,EAAgBc,SADdL,GAAaL,EAOfH,EAAgBa,SADdL,GAAaJ,EAOfH,EAAmBY,SADjBF,GAAaN,EAOfH,EAAmBW,SADjBF,GAAaL,EAOnBP,EAAgBe,iBAAiB,QAAS,WAGnC,IAFCC,IAAAA,EAASnB,EAAMoB,YAEZC,EAAI,EAAGA,EAAIrB,EAAMa,KAAK,GAAGG,MAAMF,OAAQO,IAC9CF,EAAOG,aAETX,MAGFP,EAAgBc,iBAAiB,QAAS,WACpClB,EAAMa,KAAKC,OAAS,IACtBd,EAAMuB,UAAUvB,EAAMa,KAAKC,OAAS,GACpCH,OAIJN,EAAmBa,iBAAiB,QAAS,WACtC,IAAA,IAAIG,EAAI,EAAGA,EAAIrB,EAAMa,KAAKC,OAAQO,IACrCrB,EAAMa,KAAKQ,GAAGC,aAEhBX,MAGFL,EAAmBY,iBAAiB,QAAS,WACvClB,GAAAA,EAAMa,KAAK,GAAGG,MAAMF,OAAS,EAAG,CAC7B,IAAA,IAAIO,EAAI,EAAGA,EAAIrB,EAAMa,KAAKC,OAAQO,IACrCrB,EAAMa,KAAKQ,GAAGG,YAAY,GAE5Bb,OAIJA","file":"main.f5df16ea.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('.field');\nconst appendRowButton = document.querySelector('.append-row');\nconst removeRowButton = document.querySelector('.remove-row');\nconst appendColumnButton = document.querySelector('.append-column');\nconst removeColumnButton = document.querySelector('.remove-column');\n\nconst maxRows = 10;\nconst minRows = 2;\nconst maxCols = 10;\nconst minCols = 2;\n\nfunction updateButtonsState() {\n  const rowsCount = table.rows.length;\n  const colsCount = table.rows[0].cells.length;\n\n  if (rowsCount >= maxRows) {\n    appendRowButton.disabled = true;\n  } else {\n    appendRowButton.disabled = false;\n  }\n\n  if (rowsCount <= minRows) {\n    removeRowButton.disabled = true;\n  } else {\n    removeRowButton.disabled = false;\n  }\n\n  if (colsCount >= maxCols) {\n    appendColumnButton.disabled = true;\n  } else {\n    appendColumnButton.disabled = false;\n  }\n\n  if (colsCount <= minCols) {\n    removeColumnButton.disabled = true;\n  } else {\n    removeColumnButton.disabled = false;\n  }\n}\n\nappendRowButton.addEventListener('click', () => {\n  const newRow = table.insertRow();\n\n  for (let i = 0; i < table.rows[0].cells.length; i++) {\n    newRow.insertCell();\n  }\n  updateButtonsState();\n});\n\nremoveRowButton.addEventListener('click', () => {\n  if (table.rows.length > 1) {\n    table.deleteRow(table.rows.length - 1);\n    updateButtonsState();\n  }\n});\n\nappendColumnButton.addEventListener('click', () => {\n  for (let i = 0; i < table.rows.length; i++) {\n    table.rows[i].insertCell();\n  }\n  updateButtonsState();\n});\n\nremoveColumnButton.addEventListener('click', () => {\n  if (table.rows[0].cells.length > 1) {\n    for (let i = 0; i < table.rows.length; i++) {\n      table.rows[i].deleteCell(-1);\n    }\n    updateButtonsState();\n  }\n});\n\nupdateButtonsState();\n"]}